$version Generated by VerilatedVcd $end
$date Mon Jun  6 22:16:34 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 _! clock $end
  $var wire 64 a! io_logCtrl_log_begin [63:0] $end
  $var wire 64 c! io_logCtrl_log_end [63:0] $end
  $var wire 64 e! io_logCtrl_log_level [63:0] $end
  $var wire  1 g! io_perfInfo_clean $end
  $var wire  1 h! io_perfInfo_dump $end
  $var wire  8 l! io_uart_in_ch [7:0] $end
  $var wire  1 k! io_uart_in_valid $end
  $var wire  8 j! io_uart_out_ch [7:0] $end
  $var wire  1 i! io_uart_out_valid $end
  $var wire  1 `! reset $end
  $scope module SimTop $end
   $var wire 64 & ReadAddr [63:0] $end
   $var wire 64 $ ReadData [63:0] $end
   $var wire  1 s! ReadEnable $end
   $var wire 64 u! WriteAddr [63:0] $end
   $var wire 64 w! WriteData [63:0] $end
   $var wire  1 t! WriteEnable $end
   $var wire 64 y! WriteMask [63:0] $end
   $var wire  1 _! clock $end
   $var wire 32 ( inst [31:0] $end
   $var wire 64 a! io_logCtrl_log_begin [63:0] $end
   $var wire 64 c! io_logCtrl_log_end [63:0] $end
   $var wire 64 e! io_logCtrl_log_level [63:0] $end
   $var wire  1 g! io_perfInfo_clean $end
   $var wire  1 h! io_perfInfo_dump $end
   $var wire  8 l! io_uart_in_ch [7:0] $end
   $var wire  1 k! io_uart_in_valid $end
   $var wire  8 j! io_uart_out_ch [7:0] $end
   $var wire  1 i! io_uart_out_valid $end
   $var wire 64 & pc [63:0] $end
   $var wire 32 + r_inst [31:0] $end
   $var wire 64 ) r_pc [63:0] $end
   $var wire  1 , r_valid $end
   $var wire  1 `! reset $end
   $scope module U_DifftestArchIntRegState $end
    $var wire  1 _! clock $end
    $var wire  8 {! coreid [7:0] $end
    $var wire 64 - gpr_0 [63:0] $end
    $var wire 64 / gpr_1 [63:0] $end
    $var wire 64 A gpr_10 [63:0] $end
    $var wire 64 C gpr_11 [63:0] $end
    $var wire 64 E gpr_12 [63:0] $end
    $var wire 64 G gpr_13 [63:0] $end
    $var wire 64 I gpr_14 [63:0] $end
    $var wire 64 K gpr_15 [63:0] $end
    $var wire 64 M gpr_16 [63:0] $end
    $var wire 64 O gpr_17 [63:0] $end
    $var wire 64 Q gpr_18 [63:0] $end
    $var wire 64 S gpr_19 [63:0] $end
    $var wire 64 1 gpr_2 [63:0] $end
    $var wire 64 U gpr_20 [63:0] $end
    $var wire 64 W gpr_21 [63:0] $end
    $var wire 64 Y gpr_22 [63:0] $end
    $var wire 64 [ gpr_23 [63:0] $end
    $var wire 64 ] gpr_24 [63:0] $end
    $var wire 64 _ gpr_25 [63:0] $end
    $var wire 64 a gpr_26 [63:0] $end
    $var wire 64 c gpr_27 [63:0] $end
    $var wire 64 e gpr_28 [63:0] $end
    $var wire 64 g gpr_29 [63:0] $end
    $var wire 64 3 gpr_3 [63:0] $end
    $var wire 64 i gpr_30 [63:0] $end
    $var wire 64 k gpr_31 [63:0] $end
    $var wire 64 5 gpr_4 [63:0] $end
    $var wire 64 7 gpr_5 [63:0] $end
    $var wire 64 9 gpr_6 [63:0] $end
    $var wire 64 ; gpr_7 [63:0] $end
    $var wire 64 = gpr_8 [63:0] $end
    $var wire 64 ? gpr_9 [63:0] $end
   $upscope $end
   $scope module U_inst_commit $end
    $var wire  1 _! clock $end
    $var wire  8 {! coreid [7:0] $end
    $var wire  8 {! index [7:0] $end
    $var wire 32 + instr [31:0] $end
    $var wire  1 s! isRVC $end
    $var wire 64 ) pc [63:0] $end
    $var wire  1 s! scFailed $end
    $var wire  1 s! skip $end
    $var wire  1 , valid $end
    $var wire 64 ~! wdata [63:0] $end
    $var wire  8 }! wdest [7:0] $end
    $var wire  1 |! wen $end
   $upscope $end
   $scope module u_RAMHelper $end
    $var wire  1 _! clk $end
    $var wire 64 & rIdx [63:0] $end
    $var wire 64 m rIdx_r [63:0] $end
    $var wire 64 $ rdata [63:0] $end
    $var wire  1 s! ren $end
    $var wire 64 u! wIdx [63:0] $end
    $var wire 64 "" wIdx_r [63:0] $end
    $var wire 64 w! wdata [63:0] $end
    $var wire  1 t! wen $end
    $var wire 64 y! wmask [63:0] $end
   $upscope $end
   $scope module u_zerocore $end
    $var wire 64 & RamReadAddr [63:0] $end
    $var wire 64 $ RamReadData [63:0] $end
    $var wire  1 s! RamReadEnable $end
    $var wire 64 u! RamWriteAddr [63:0] $end
    $var wire 64 w! RamWriteData [63:0] $end
    $var wire  1 t! RamWriteEnable $end
    $var wire 64 y! RamWriteMask [63:0] $end
    $var wire  1 $" aluBsrc $end
    $var wire  4 p aluCtl [3:0] $end
    $var wire  1 _! clk $end
    $var wire 64 t imm [63:0] $end
    $var wire 64 o! ina [63:0] $end
    $var wire 64 t inb [63:0] $end
    $var wire 32 v instD [31:0] $end
    $var wire 32 o instF [31:0] $end
    $var wire 64 & pc [63:0] $end
    $var wire 64 %" ra [63:0] $end
    $var wire  5 q ra_addr [4:0] $end
    $var wire  1 $" ra_en $end
    $var wire 64 m! rb [63:0] $end
    $var wire  5 r rb_addr [4:0] $end
    $var wire  1 $" rb_en $end
    $var wire  5 s rd_addr [4:0] $end
    $var wire  1 $" rd_en $end
    $var wire 64 q! res [63:0] $end
    $var wire  1 `! rst $end
    $var wire 64 '" rw [63:0] $end
    $scope module u_ex $end
     $var wire  4 p aluCtl [3:0] $end
     $var wire 64 o! ina [63:0] $end
     $var wire 64 t inb [63:0] $end
     $var wire 64 q! res [63:0] $end
    $upscope $end
    $scope module u_id $end
     $var wire  1 { ADDI $end
     $var wire  1 $" aluBsrc $end
     $var wire  4 p aluCtl [3:0] $end
     $var wire  8 | aluType [7:0] $end
     $var wire  3 x funt3 [2:0] $end
     $var wire  1 z funt3_000 $end
     $var wire 64 t imm [63:0] $end
     $var wire 32 v inst [31:0] $end
     $var wire  7 w opcode [6:0] $end
     $var wire  1 y opcode_001_0011 $end
     $var wire  5 q ra_addr [4:0] $end
     $var wire  1 $" ra_en $end
     $var wire  5 r rb_addr [4:0] $end
     $var wire  1 $" rb_en $end
     $var wire  5 s rd_addr [4:0] $end
     $var wire  1 $" rd_en $end
    $upscope $end
    $scope module u_if $end
     $var wire  1 _! clk $end
     $var wire 64 & pc [63:0] $end
     $var wire  1 `! rst $end
    $upscope $end
    $scope module u_inst_F2D $end
     $var wire 32 )" WIDTH [31:0] $end
     $var wire  1 _! clk $end
     $var wire 32 o din [31:0] $end
     $var wire 32 v dout [31:0] $end
     $var wire  1 `! rst $end
     $var wire  1 $" wen $end
    $upscope $end
    $scope module u_regs $end
     $var wire 64 o! Ra [63:0] $end
     $var wire  5 q Ra_addr [4:0] $end
     $var wire  1 $" Ra_en $end
     $var wire 64 m! Rb [63:0] $end
     $var wire  5 r Rb_addr [4:0] $end
     $var wire  1 $" Rb_en $end
     $var wire 64 '" Rw [63:0] $end
     $var wire  5 s Rw_addr [4:0] $end
     $var wire  1 $" Rw_en $end
     $var wire  1 _! clk $end
     $var wire 32 # i [31:0] $end
     $var wire 64 } regsheap[0] [63:0] $end
     $var wire 64 3! regsheap[10] [63:0] $end
     $var wire 64 5! regsheap[11] [63:0] $end
     $var wire 64 7! regsheap[12] [63:0] $end
     $var wire 64 9! regsheap[13] [63:0] $end
     $var wire 64 ;! regsheap[14] [63:0] $end
     $var wire 64 =! regsheap[15] [63:0] $end
     $var wire 64 ?! regsheap[16] [63:0] $end
     $var wire 64 A! regsheap[17] [63:0] $end
     $var wire 64 C! regsheap[18] [63:0] $end
     $var wire 64 E! regsheap[19] [63:0] $end
     $var wire 64 !! regsheap[1] [63:0] $end
     $var wire 64 G! regsheap[20] [63:0] $end
     $var wire 64 I! regsheap[21] [63:0] $end
     $var wire 64 K! regsheap[22] [63:0] $end
     $var wire 64 M! regsheap[23] [63:0] $end
     $var wire 64 O! regsheap[24] [63:0] $end
     $var wire 64 Q! regsheap[25] [63:0] $end
     $var wire 64 S! regsheap[26] [63:0] $end
     $var wire 64 U! regsheap[27] [63:0] $end
     $var wire 64 W! regsheap[28] [63:0] $end
     $var wire 64 Y! regsheap[29] [63:0] $end
     $var wire 64 #! regsheap[2] [63:0] $end
     $var wire 64 [! regsheap[30] [63:0] $end
     $var wire 64 ]! regsheap[31] [63:0] $end
     $var wire 64 %! regsheap[3] [63:0] $end
     $var wire 64 '! regsheap[4] [63:0] $end
     $var wire 64 )! regsheap[5] [63:0] $end
     $var wire 64 +! regsheap[6] [63:0] $end
     $var wire 64 -! regsheap[7] [63:0] $end
     $var wire 64 /! regsheap[8] [63:0] $end
     $var wire 64 1! regsheap[9] [63:0] $end
     $var wire  1 `! rst $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000100000 #
b0000000000100000000000001001001100000000000100000000000010010011 $
b0000000000000000000000000000000010000000000000000000000000000100 &
b00000000001000000000000010010011 (
b0000000000000000000000000000000010000000000000000000000000000000 )
b00000000000000000000000000000000 +
1,
b0000000000000000000000000000000000000000000000000000000000000000 -
b0000000000000000000000000000000000000000000000000000000000000000 /
b0000000000000000000000000000000000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 5
b0000000000000000000000000000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000 ;
b0000000000000000000000000000000000000000000000000000000000000000 =
b0000000000000000000000000000000000000000000000000000000000000000 ?
b0000000000000000000000000000000000000000000000000000000000000000 A
b0000000000000000000000000000000000000000000000000000000000000000 C
b0000000000000000000000000000000000000000000000000000000000000000 E
b0000000000000000000000000000000000000000000000000000000000000000 G
b0000000000000000000000000000000000000000000000000000000000000000 I
b0000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 M
b0000000000000000000000000000000000000000000000000000000000000000 O
b0000000000000000000000000000000000000000000000000000000000000000 Q
b0000000000000000000000000000000000000000000000000000000000000000 S
b0000000000000000000000000000000000000000000000000000000000000000 U
b0000000000000000000000000000000000000000000000000000000000000000 W
b0000000000000000000000000000000000000000000000000000000000000000 Y
b0000000000000000000000000000000000000000000000000000000000000000 [
b0000000000000000000000000000000000000000000000000000000000000000 ]
b0000000000000000000000000000000000000000000000000000000000000000 _
b0000000000000000000000000000000000000000000000000000000000000000 a
b0000000000000000000000000000000000000000000000000000000000000000 c
b0000000000000000000000000000000000000000000000000000000000000000 e
b0000000000000000000000000000000000000000000000000000000000000000 g
b0000000000000000000000000000000000000000000000000000000000000000 i
b0000000000000000000000000000000000000000000000000000000000000000 k
b0000000000000000000000000000000000000000000000000000000000000100 m
b00000000000100000000000010010011 o
b0000 p
b00000 q
b00000 r
b00000 s
b0000000000000000000000000000000000000000000000000000000000000000 t
b00000000000000000000000000000000 v
b0000000 w
b000 x
0y
1z
0{
b00000000 |
b0000000000000000000000000000000000000000000000000000000000000000 }
b0000000000000000000000000000000000000000000000000000000000000000 !!
b0000000000000000000000000000000000000000000000000000000000000000 #!
b0000000000000000000000000000000000000000000000000000000000000000 %!
b0000000000000000000000000000000000000000000000000000000000000000 '!
b0000000000000000000000000000000000000000000000000000000000000000 )!
b0000000000000000000000000000000000000000000000000000000000000000 +!
b0000000000000000000000000000000000000000000000000000000000000000 -!
b0000000000000000000000000000000000000000000000000000000000000000 /!
b0000000000000000000000000000000000000000000000000000000000000000 1!
b0000000000000000000000000000000000000000000000000000000000000000 3!
b0000000000000000000000000000000000000000000000000000000000000000 5!
b0000000000000000000000000000000000000000000000000000000000000000 7!
b0000000000000000000000000000000000000000000000000000000000000000 9!
b0000000000000000000000000000000000000000000000000000000000000000 ;!
b0000000000000000000000000000000000000000000000000000000000000000 =!
b0000000000000000000000000000000000000000000000000000000000000000 ?!
b0000000000000000000000000000000000000000000000000000000000000000 A!
b0000000000000000000000000000000000000000000000000000000000000000 C!
b0000000000000000000000000000000000000000000000000000000000000000 E!
b0000000000000000000000000000000000000000000000000000000000000000 G!
b0000000000000000000000000000000000000000000000000000000000000000 I!
b0000000000000000000000000000000000000000000000000000000000000000 K!
b0000000000000000000000000000000000000000000000000000000000000000 M!
b0000000000000000000000000000000000000000000000000000000000000000 O!
b0000000000000000000000000000000000000000000000000000000000000000 Q!
b0000000000000000000000000000000000000000000000000000000000000000 S!
b0000000000000000000000000000000000000000000000000000000000000000 U!
b0000000000000000000000000000000000000000000000000000000000000000 W!
b0000000000000000000000000000000000000000000000000000000000000000 Y!
b0000000000000000000000000000000000000000000000000000000000000000 [!
b0000000000000000000000000000000000000000000000000000000000000000 ]!
1_!
0`!
b0000000000000000000000000000000000000000000000000000000000000000 a!
b1111111111111111111111111111111111111111111111111111111111111111 c!
b0000000000000000000000000000000000000000000000000000000000000000 e!
0g!
0h!
0i!
b00000000 j!
0k!
b00000000 l!
b0000000000000000000000000000000000000000000000000000000000000000 m!
b0000000000000000000000000000000000000000000000000000000000000000 o!
b0000000000000000000000000000000000000000000000000000000000000000 q!
0s!
0t!
b0000000000000000000000000000000000000000000000000000000000000000 u!
b0000000000000000000000000000000000000000000000000000000000000000 w!
b0000000000000000000000000000000000000000000000000000000000000000 y!
b00000000 {!
0|!
b00000000 }!
b0000000000000000000000000000000000000000000000000000000000000000 ~!
b1111111111111111111111111111111110000000000000000000000000000000 ""
1$"
b0000000000000000000000000000000000000000000000000000000000000000 %"
b0000000000000000000000000000000000000000000000000000000000000000 '"
b00000000000000000000000000100000 )"
