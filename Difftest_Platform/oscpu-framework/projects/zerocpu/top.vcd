$version Generated by VerilatedVcd $end
$date Sun Jun  5 23:49:12 2022 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 64 l RamReadAddr [63:0] $end
  $var wire 64 h RamReadData [63:0] $end
  $var wire  1 j RamReadEnable $end
  $var wire 64 n RamWriteAddr [63:0] $end
  $var wire 64 r RamWriteData [63:0] $end
  $var wire  1 k RamWriteEnable $end
  $var wire 64 p RamWriteMask [63:0] $end
  $var wire  1 f clk $end
  $var wire  1 g rst $end
  $scope module zerocore $end
   $var wire 64 l RamReadAddr [63:0] $end
   $var wire 64 h RamReadData [63:0] $end
   $var wire  1 j RamReadEnable $end
   $var wire 64 n RamWriteAddr [63:0] $end
   $var wire 64 r RamWriteData [63:0] $end
   $var wire  1 k RamWriteEnable $end
   $var wire 64 p RamWriteMask [63:0] $end
   $var wire  1 )! aluBsrc $end
   $var wire  4 u aluCtl [3:0] $end
   $var wire  1 f clk $end
   $var wire 64 } imm [63:0] $end
   $var wire 32 t inst [31:0] $end
   $var wire 64 $ pc [63:0] $end
   $var wire 64 y ra [63:0] $end
   $var wire  5 v ra_addr [4:0] $end
   $var wire  1 )! ra_en $end
   $var wire 64 y ra_ex [63:0] $end
   $var wire 64 { rb [63:0] $end
   $var wire  5 w rb_addr [4:0] $end
   $var wire  1 )! rb_en $end
   $var wire 64 } rb_ex [63:0] $end
   $var wire  5 x rd_addr [4:0] $end
   $var wire  1 )! rd_en $end
   $var wire 64 !! res [63:0] $end
   $var wire  1 g rst $end
   $scope module u_ex $end
    $var wire  4 u aluCtl [3:0] $end
    $var wire 64 y ra [63:0] $end
    $var wire 64 } rb [63:0] $end
    $var wire 64 !! res [63:0] $end
   $upscope $end
   $scope module u_id $end
    $var wire  1 '! ADDI $end
    $var wire  1 )! aluBsrc $end
    $var wire  4 u aluCtl [3:0] $end
    $var wire  8 (! aluType [7:0] $end
    $var wire  3 $! funt3 [2:0] $end
    $var wire  1 &! funt3_000 $end
    $var wire 64 } imm [63:0] $end
    $var wire 32 t inst [31:0] $end
    $var wire  7 #! opcode [6:0] $end
    $var wire  1 %! opcode_001_0011 $end
    $var wire  5 v ra_addr [4:0] $end
    $var wire  1 )! ra_en $end
    $var wire  5 w rb_addr [4:0] $end
    $var wire  1 )! rb_en $end
    $var wire  5 x rd_addr [4:0] $end
    $var wire  1 )! rd_en $end
   $upscope $end
   $scope module u_if $end
    $var wire  1 f clk $end
    $var wire 64 $ pc [63:0] $end
    $var wire  1 g rst $end
   $upscope $end
   $scope module u_regs $end
    $var wire 64 y Ra [63:0] $end
    $var wire  5 v Ra_addr [4:0] $end
    $var wire  1 )! Ra_en $end
    $var wire 64 { Rb [63:0] $end
    $var wire  5 w Rb_addr [4:0] $end
    $var wire  1 )! Rb_en $end
    $var wire 64 !! Rw [63:0] $end
    $var wire  5 x Rw_addr [4:0] $end
    $var wire  1 )! Rw_en $end
    $var wire  1 f clk $end
    $var wire 32 # i [31:0] $end
    $var wire 64 & regsheap[0] [63:0] $end
    $var wire 64 : regsheap[10] [63:0] $end
    $var wire 64 < regsheap[11] [63:0] $end
    $var wire 64 > regsheap[12] [63:0] $end
    $var wire 64 @ regsheap[13] [63:0] $end
    $var wire 64 B regsheap[14] [63:0] $end
    $var wire 64 D regsheap[15] [63:0] $end
    $var wire 64 F regsheap[16] [63:0] $end
    $var wire 64 H regsheap[17] [63:0] $end
    $var wire 64 J regsheap[18] [63:0] $end
    $var wire 64 L regsheap[19] [63:0] $end
    $var wire 64 ( regsheap[1] [63:0] $end
    $var wire 64 N regsheap[20] [63:0] $end
    $var wire 64 P regsheap[21] [63:0] $end
    $var wire 64 R regsheap[22] [63:0] $end
    $var wire 64 T regsheap[23] [63:0] $end
    $var wire 64 V regsheap[24] [63:0] $end
    $var wire 64 X regsheap[25] [63:0] $end
    $var wire 64 Z regsheap[26] [63:0] $end
    $var wire 64 \ regsheap[27] [63:0] $end
    $var wire 64 ^ regsheap[28] [63:0] $end
    $var wire 64 ` regsheap[29] [63:0] $end
    $var wire 64 * regsheap[2] [63:0] $end
    $var wire 64 b regsheap[30] [63:0] $end
    $var wire 64 d regsheap[31] [63:0] $end
    $var wire 64 , regsheap[3] [63:0] $end
    $var wire 64 . regsheap[4] [63:0] $end
    $var wire 64 0 regsheap[5] [63:0] $end
    $var wire 64 2 regsheap[6] [63:0] $end
    $var wire 64 4 regsheap[7] [63:0] $end
    $var wire 64 6 regsheap[8] [63:0] $end
    $var wire 64 8 regsheap[9] [63:0] $end
    $var wire  1 g rst $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000100000 #
b0000000000000000000000000000000000000000000000000000000000000000 $
b0000000000000000000000000000000000000000000000000000000000000000 &
b0000000000000000000000000000000000000000000000000000000000000000 (
b0000000000000000000000000000000000000000000000000000000000000000 *
b0000000000000000000000000000000000000000000000000000000000000000 ,
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000000000000000000000 0
b0000000000000000000000000000000000000000000000000000000000000000 2
b0000000000000000000000000000000000000000000000000000000000000000 4
b0000000000000000000000000000000000000000000000000000000000000000 6
b0000000000000000000000000000000000000000000000000000000000000000 8
b0000000000000000000000000000000000000000000000000000000000000000 :
b0000000000000000000000000000000000000000000000000000000000000000 <
b0000000000000000000000000000000000000000000000000000000000000000 >
b0000000000000000000000000000000000000000000000000000000000000000 @
b0000000000000000000000000000000000000000000000000000000000000000 B
b0000000000000000000000000000000000000000000000000000000000000000 D
b0000000000000000000000000000000000000000000000000000000000000000 F
b0000000000000000000000000000000000000000000000000000000000000000 H
b0000000000000000000000000000000000000000000000000000000000000000 J
b0000000000000000000000000000000000000000000000000000000000000000 L
b0000000000000000000000000000000000000000000000000000000000000000 N
b0000000000000000000000000000000000000000000000000000000000000000 P
b0000000000000000000000000000000000000000000000000000000000000000 R
b0000000000000000000000000000000000000000000000000000000000000000 T
b0000000000000000000000000000000000000000000000000000000000000000 V
b0000000000000000000000000000000000000000000000000000000000000000 X
b0000000000000000000000000000000000000000000000000000000000000000 Z
b0000000000000000000000000000000000000000000000000000000000000000 \
b0000000000000000000000000000000000000000000000000000000000000000 ^
b0000000000000000000000000000000000000000000000000000000000000000 `
b0000000000000000000000000000000000000000000000000000000000000000 b
b0000000000000000000000000000000000000000000000000000000000000000 d
0f
1g
b0000000000000000000000000000000000000000000000000000000000000000 h
1j
0k
b0000000000000000000000000000000000000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 n
b0000000000000000000000000000000000000000000000000000000000000000 p
b0000000000000000000000000000000000000000000000000000000000000000 r
b00000000000000000000000000000000 t
b0000 u
b00000 v
b00000 w
b00000 x
b0000000000000000000000000000000000000000000000000000000000000000 y
b0000000000000000000000000000000000000000000000000000000000000000 {
b0000000000000000000000000000000000000000000000000000000000000000 }
b0000000000000000000000000000000000000000000000000000000000000000 !!
b0000000 #!
b000 $!
0%!
1&!
0'!
b00000000 (!
1)!
#1
#2
#3
#4
#5
1f
#6
#7
#8
#9
#10
0f
b0000000000000000000000010001001100000000000000000000000010010011 h
b00000000000000000000000010010011 t
b00001 x
b0010011 #!
1%!
1'!
b00000001 (!
#11
#12
#13
#14
#15
b0000000000000000000000000000000000000000000000000000000000000100 $
1f
0g
b0000000000000000000000000000000000000000000000000000000000000100 l
#16
#17
#18
#19
#20
0f
b0000000000100000000000111001001100000000001000001000011100110011 h
b00000000001000001000011100110011 t
b00001 v
b00010 w
b01110 x
b0000000000000000000000000000000000000000000000000000000000000010 }
b0000000000000000000000000000000000000000000000000000000000000010 !!
b0110011 #!
0%!
0'!
b00000000 (!
#21
#22
#23
#24
#25
b0000000000000000000000000000000000000000000000000000000000001000 $
b0000000000000000000000000000000000000000000000000000000000000010 B
1f
b0000000000000000000000000000000000000000000000000000000000001000 l
#26
#27
#28
#29
#30
0f
b0100101001110111000110000110001100000000010000000000000110010011 h
b00000000010000000000000110010011 t
b00000 v
b00100 w
b00011 x
b0000000000000000000000000000000000000000000000000000000000000100 }
b0000000000000000000000000000000000000000000000000000000000000100 !!
b0010011 #!
1%!
1'!
b00000001 (!
#31
#32
#33
#34
#35
b0000000000000000000000000000000000000000000000000000000000001100 $
b0000000000000000000000000000000000000000000000000000000000000100 ,
1f
b0000000000000000000000000000000000000000000000000000000000001100 l
#36
#37
#38
#39
#40
0f
b0000000000000000000000010001001110000000000000000000000010110111 h
b10000000000000000000000010110111 t
b00000 w
b00001 x
b0000000000000000000000000000000000000000000000000000100000000000 }
b0000000000000000000000000000000000000000000000000000100000000000 !!
b0110111 #!
0%!
0'!
b00000000 (!
#41
#42
#43
#44
#45
b0000000000000000000000000000000000000000000000000000000000010000 $
b0000000000000000000000000000000000000000000000000000100000000000 (
1f
b0000000000000000000000000000000000000000000000000000000000010000 l
#46
#47
#48
#49
#50
0f
b1111111111111111000000111011011100000000001000001000011100110011 h
b00000000001000001000011100110011 t
b00001 v
b00010 w
b01110 x
b0000000000000000000000000000000000000000000000000000100000000000 y
b0000000000000000000000000000000000000000000000000000000000000010 }
b0000000000000000000000000000000000000000000000000000100000000010 !!
b0110011 #!
#51
#52
#53
#54
#55
b0000000000000000000000000000000000000000000000000000000000010100 $
b0000000000000000000000000000000000000000000000000000100000000010 B
1f
b0000000000000000000000000000000000000000000000000000000000010100 l
#56
#57
#58
#59
